let rec loop () =
  print_string "> ";
  let maths = read_line () in
  if maths = "q" then exit 0;
  let tokens = Lexer.lex maths in
  let ast, _ = Parser.parse_expr tokens in

  let answer = Eval.eval ast in

  answer |> string_of_float |> print_endline;
  loop ()

let () =
  print_endline
    {|
 
 .----------------.  .----------------.  .----------------.  .----------------.  .----------------.   .----------------.  .----------------.  .----------------.  .----------------. 
| .--------------. || .--------------. || .--------------. || .--------------. || .--------------. | | .--------------. || .--------------. || .--------------. || .--------------. |
| |     ____     | || |     ______   | || |      __      | || | ____    ____ | || |   _____      | | | |     ______   | || |      __      | || |   _____      | || |     ______   | |
| |   .'    `.   | || |   .' ___  |  | || |     /  \     | || ||_   \  /   _|| || |  |_   _|     | | | |   .' ___  |  | || |     /  \     | || |  |_   _|     | || |   .' ___  |  | |
| |  /  .--.  \  | || |  / .'   \_|  | || |    / /\ \    | || |  |   \/   |  | || |    | |       | | | |  / .'   \_|  | || |    / /\ \    | || |    | |       | || |  / .'   \_|  | |
| |  | |    | |  | || |  | |         | || |   / ____ \   | || |  | |\  /| |  | || |    | |   _   | | | |  | |         | || |   / ____ \   | || |    | |   _   | || |  | |         | |
| |  \  `--'  /  | || |  \ `.___.'\  | || | _/ /    \ \_ | || | _| |_\/_| |_ | || |   _| |__/ |  | | | |  \ `.___.'\  | || | _/ /    \ \_ | || |   _| |__/ |  | || |  \ `.___.'\  | |
| |   `.____.'   | || |   `._____.'  | || ||____|  |____|| || ||_____||_____|| || |  |________|  | | | |   `._____.'  | || ||____|  |____|| || |  |________|  | || |   `._____.'  | |
| |              | || |              | || |              | || |              | || |              | | | |              | || |              | || |              | || |              | |
| '--------------' || '--------------' || '--------------' || '--------------' || '--------------' | | '--------------' || '--------------' || '--------------' || '--------------' |
 '----------------'  '----------------'  '----------------'  '----------------'  '----------------'   '----------------'  '----------------'  '----------------'  '----------------' 

 Enter some calculations!
 Enter 'q' to exit|};
  loop ()
